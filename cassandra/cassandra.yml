- name: Install cassandra
  become: yes
  hosts: all
  vars:
    cassandra_dir: /etc/cassandra/conf
    cassandra_cfg: "{{ cassandra_dir }}/cassandra.yaml"
    listen_int: eth1
  tasks:
  - name: Make list of nodes
    set_fact:
      nodes_list: "{{ (nodes_list | default([])) + [hostvars[item]['ansible_' + listen_int].ipv4.address] }}"
    with_items: "{{ groups.all | sort() }}"

  - name: Add repository
    copy:
      dest: /etc/yum.repos.d/cassandra.repo
      src: cassandra.repo

  - name: Install packages
    yum:
      name: 
      - cassandra
      - net-tools

  - name: Delete listen address
    lineinfile:
      path: "{{ cassandra_cfg }}"
      regexp: '^listen_address:'
      state: absent
    register: cassandra_addr

  - name: Set listen interface
    lineinfile:
      path: "{{ cassandra_cfg }}"
      line: "listen_interface: {{ listen_int }}"
      regexp: '^listen_interface:'
    register: cassandra_int

  - name: Set seeds list
    replace:
      path: "{{ cassandra_cfg }}"
      replace: '\1 "{{ nodes_list[:3] | join(",") }}"'
      regexp: '^(\s+ - seeds:) .+$'
    register: cassandra_seed

  - name: Set snitch type
    replace:
      path: "{{ cassandra_cfg }}"
      replace: '\1 GossipingPropertyFileSnitch'
      regexp: '^(endpoint_snitch:) .+$'
    register: cassandra_snitch

  - name: Set datacenter name
    lineinfile:
      path: "{{ cassandra_dir }}/cassandra-rackdc.properties"
      line: "dc={{ ansible_fqdn.split('.')[0] }}"
      regexp: '^dc='
    register: cassandra_dc

  - name: Start service
    service:
      name: cassandra
      enabled: yes
      state: "{{ 'restarted' if cassandra_addr.changed or cassandra_dc.changed or cassandra_int.changed or cassandra_seed.changed or cassandra_snitch.changed else 'started' }}"
