- name: Install Apache Ranger
  become: yes
  hosts: all
  vars_files:
  - vars.yml
  tasks:
  - name: Install packages
    yum:
      name:
      - git
      - gcc
      - java-1.8.0-openjdk-devel
      - krb5-workstation
      - lsof
      - mariadb-server
      - mysql-connector-java
      - net-tools
      - ntpdate

  - name: Start MySQL service
    service:
      name: mariadb
      enabled: yes
      state: started

  - name: Download Maven
    get_url:
      dest: "{{ maven_tgz }}"
      timeout: 600
      url: "https://archive.apache.org/dist/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz"

  - name: Unpack Maven
    unarchive:
      dest: "{{ maven_dir | dirname }}"
      src: "{{ maven_tgz }}"
      remote_src: yes

  - name: Download Solr
    get_url:
      dest: "{{ solr_tgz }}"
      timeout: 600
      url: "http://apache-mirror.rbc.ru/pub/apache/lucene/solr/{{ solr_version }}/solr-{{ solr_version }}.tgz"

  - name: Create solr group
    group:
      name: solr

  - name: Create solr user
    user:
      name: solr
      group: solr
      home: /noexistent
      create_home: no

  - name: Unpack Solr
    unarchive:
      dest: "{{ solr_dir | dirname }}"
      src: "{{ solr_tgz }}"
      owner: solr
      group: solr
      remote_src: yes

  - name: Disable limit checks in Solr profile
    lineinfile:
      dest: "{{ solr_bin_dir }}/solr.in.sh"
      line: SOLR_ULIMIT_CHECKS=false

  - name: Start Solr
    command: "{{ solr_bin_dir }}/solr start"
    args:
      creates: "{{ solr_bin_dir }}/solr-8983.pid"
    become_user: solr

  - name: Download Kafka
    get_url:
      dest: "{{ kafka_tgz }}"
      timeout: 600
      url: "https://archive.apache.org/dist/kafka/{{ kafka_version.split('-')[1] }}/kafka_{{ kafka_version }}.tgz"

  - name: Create kafka group
    group:
      name: kafka

  - name: Create kafka user
    user:
      name: kafka
      group: kafka
      home: /noexistent
      create_home: no

  - name: Unpack Kafka
    unarchive:
      dest: "{{ kafka_dir | dirname }}"
      src: "{{ kafka_tgz }}"
      owner: kafka
      group: kafka
      remote_src: yes

  - name: Create symlink
    file:
      name: /usr/kafka
      state: link
      src: "{{ kafka_dir }}"
      force: yes

  - name: Create Kerberos config
    template:
      src: krb5.conf.j2
      dest: /etc/krb5.conf

  - name: Upload keytabs
    copy:
      src: "{{ item }}.keytab"
      dest: "{{ kafka_conf_dir }}"
    with_items:
    - kafka
    - ksql

  - name: Create Kafka JAAS config
    template:
      src: kafka_server_jaas.conf.j2
      dest: "{{ kafka_jaas_conf }}"

  - name: Create Kafka client properties
    template:
      src: "{{ conf_name }}.j2"
      dest: "{{ kafka_conf_dir }}/{{ conf_name }}"
    vars:
      conf_name: "client-{{ item }}.properties"
    with_items:
    - admin
    - user

  - name: Add SASL configuration to Kafka
    blockinfile:
      block: |
        advertised.listeners=SASL_PLAINTEXT://{{ ansible_default_ipv4.address }}:9092
        allow.everyone.if.no.acl.found=true
        authorizer.class.name=org.apache.ranger.authorization.kafka.authorizer.RangerKafkaAuthorizer
        listeners=SASL_PLAINTEXT://{{ ansible_default_ipv4.address }}:9092
        sasl.enabled.mechanisms=GSSAPI
        sasl.kerberos.service.name=kafka
        sasl.mechanism.inter.broker.protocol=GSSAPI
        security.inter.broker.protocol=SASL_PLAINTEXT
        super.users=User:kafka
      path: "{{ kafka_conf_dir }}/server.properties"

  - name: Start zookeeper
    shell: "nohup ./bin/zookeeper-server-start.sh ./config/zookeeper.properties &"
    args:
      chdir: "{{ kafka_dir }}"
    become_user: kafka

  - name: Download Ranger sources
    git:
      repo: https://github.com/apache/ranger
      dest: "{{ ranger_build_dir }}"
      version: master

  - name: Build Ranger
    command: "mvn clean package assembly:assembly"
    args:
      chdir: "{{ ranger_build_dir }}"
      creates: "{{ ranger_target_dir }}/ranger-{{ ranger_version }}-admin.zip"
    environment:
      PATH: "{{ maven_dir }}/bin:/usr/bin:/bin"
      M2_HOME: "{{ maven_dir }}"
      MAVEN_OPTS: -Xmx512M

  - name: Unpack Ranger Admin
    unarchive:
      dest: "{{ ranger_dir | dirname }}"
      src: "{{ ranger_target_dir }}/ranger-{{ ranger_version }}-admin.tar.gz"
      remote_src: yes

  - name: Fix Ranger configuration
    replace:
      dest: "{{ ranger_dir }}/install.properties"
      regexp: "^{{ item.key }}="
      replace: "{{ item.key }}={{ item.value }}"
    with_dict:
      audit_solr_urls: http://localhost:8983/solr/ranger_audits
      db_name: "ranger{{ ranger_version.split('.')[0] }}"
      db_password: "{{ ranger_db_pass }}"
      rangerAdmin_password: S1meCrYptoGr4phicTh1ng
      rangerTagsync_password: S2meCrYptoGr4phicTh1ng
      rangerUsersync_password: S3meCrYptoGr4phicTh1ng
      keyadmin_password: S4meCrYptoGr4phicTh1ng

  - name: Setup Ranger Admin
    shell: "./setup.sh && ./set_globals.sh"
    args:
      chdir: "{{ ranger_dir }}"
      creates: /etc/init.d/ranger-admin
    environment:
      JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64

  - name: Fix permissions for startup script
    file:
      name: "{{ ranger_dir }}/ews/ranger-admin-services.sh"
      mode: 0555

  - name: Fix DB password in ranger-admin-site.xml
    lineinfile:
      dest: "{{ ranger_dir }}/conf/ranger-admin-site.xml"
      line: "                <value>{{ ranger_db_pass }}</value>"
      regexp: '^\s+<value>_</value>'
      insertafter: '<name>ranger.jpa.jdbc.password</name>'

  - name: Enable Ranger Admin service
    sysvinit:
      name: ranger-admin
      enabled: yes
      state: started

  - name: Unpack Ranger Kafka plugin
    unarchive:
      dest: "{{ ranger_dir | dirname }}"
      src: "{{ ranger_target_dir }}/ranger-{{ ranger_version }}-kafka-plugin.tar.gz"
      remote_src: yes

  - name: Fix Ranger Kafka plugin configuration
    replace:
      dest: "{{ ranger_kafka_dir }}/install.properties"
      regexp: "^{{ item.key }}="
      replace: "{{ item.key }}={{ item.value }}"
    with_dict:
      COMPONENT_INSTALL_DIR_NAME: "{{ kafka_dir | dirname }}/"
      POLICY_MGR_URL: http://localhost:6080
      REPOSITORY_NAME: kafkadev

  - name: Setup Ranger Kafka plugin
    shell: ./enable-kafka-plugin.sh
    args:
      chdir: "{{ ranger_kafka_dir }}"
      creates: "{{ kafka_dir }}/libs/ranger-kafka-plugin-impl"
    environment:
      JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64

  - name: Start Kafka
    shell: "nohup ./bin/kafka-server-start.sh ./config/server.properties &"
    args:
      chdir: "{{ kafka_dir }}"
    become_user: kafka
    environment:
      KAFKA_OPTS: "-Djava.security.auth.login.config={{ kafka_jaas_conf }}"
