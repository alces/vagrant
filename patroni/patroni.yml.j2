scope: postgres
namespace: /patroni/
name: {{ ansible_fqdn.split('.')[0] }}
{% set my_addr = ansible_eth1.ipv4.address %}
restapi:
    listen: {{ my_addr }}:8008
    connect_address: {{ my_addr }}:8008

zookeeper:
    hosts:
    {% for srv in groups.zookeeper %}
    - {{ hostvars[srv].ansible_eth1.ipv4.address }}:2181
    {% endfor %}

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true

    initdb:
    - encoding: UTF8

    pg_hba:
    - host replication replicator 127.0.0.1/32 md5
{% for srv in groups.postgres %}
    - host replication replicator {{ hostvars[srv].ansible_eth1.ipv4.address }}/32 md5
{% endfor %}
    - host all all 0.0.0.0/0 md5

    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb

postgresql:
    listen: {{ my_addr }}:5432
    connect_address: {{ my_addr }}:5432
    data_dir: /var/lib/pgsql/9.6/data
    pgpass: /tmp/.pgpass
    authentication:
        replication:
            username: replicator
            password: rep-pass
        superuser:
            username: postgres
            password: secretpassword
    parameters:
        unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
